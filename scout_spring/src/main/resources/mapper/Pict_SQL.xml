<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="pict.mapper.PictMapper">	

	<select id="scout_left_search_list" resultType="pictVO">
		select m.MEMBERNO, m.KNAME, m.BIRTHDAY, m.MEMCLSCODE, m.MEMGRADECODE, m.TROOPSCOUTY, m.TROOPLEADERY, m.LEADERINCNT, m.ENTERDATE, m.SCOUTINCNT, 
		(case when li.idx is not null then 'Y' else 'N' end) as LIFE_YN,
		(case when m.EMPLOYEEY = '' then 'N' when m.EMPLOYEEY is null then 'N' when m.EMPLOYEEY = 'N' then 'N' else 'Y' end) as EMPLOYEEY
		from member m
		inner join memclscode mc on m.MEMCLSCODE = mc.MEMCLSCODE
		left outer join lifetime li on li.MEMBERNO = m.MEMBERNO
		where 1=1
		<if test="search_kname != null and search_kname != '' ">
			and KNAME LIKE CONCAT('%', #{search_kname}, '%')
		</if>
		<if test="search_memberno != null and search_memberno != '' ">
			and m.MEMBERNO =#{search_memberno}
		</if>
		<if test="search_memberno_se != null and search_memberno_se != '' ">
			and m.MEMBERNO =#{search_memberno_se}
		</if>
		
		<if test="search_birthday != null and search_birthday != '' ">
			and m.BIRTHDAY = #{search_birthday}
		</if>
		
		<if test="search_history != null and search_history != ''">
			<choose>
	            <when test="search_history == 3"> 
	                and li.idx is not null 
	            </when>
	            <when test="search_history == 2">
	            	and m.TROOPLEADERY = 'Y'
	            </when>
	            <otherwise> 
	                and m.TROOPSCOUTY = 'Y'
	            </otherwise>
	        </choose>
		</if>
		
		<if test="search_memclscode != null and search_memclscode != ''">
			and m.MEMCLSCODE = #{search_memclscode}
		</if>
		
		<if test="search_memgradecode != null and search_memgradecode != ''">
			and m.MEMGRADECODE = #{search_memgradecode}
		</if>
		
		<if test="search_start != null and search_start != '' and search_end != null and search_end != '' ">
			and m.ENTERDATE between #{search_start} and #{search_end}
		</if>
		
	</select>

	<!-- 대원/리더 기본정보 조회 -->
	<select id="get_per_info" resultType="pictVO">
		select m.MEMBERNO, m.MEMCLSCODE, m.MEMGRADECODE, m.PICIMG, m.LEADERINCNT, m.ENTERDATE, m.SCOUTINCNT, m.PICIMG, m.SCOUTCLSCODE, m.SCOUTORGNO, 
		ifnull((select orgname from org o where o.ORGNO = m.SCOUTORGNO), '') SCOUTORGNAME,
		ifnull((select orgname from org o where o.ORGNO = m.LEADERORGNO),'') LEADERORGNAME,
		ifnull(m.LEADERORGPOSITIONCODE, '') LEADERORGPOSITIONCODE,
		 m.BIRTHDAY, 
		 (case when m.EMPLOYEEY = '' then 'N' when m.EMPLOYEEY is null then 'N' when m.EMPLOYEEY = 'N' then 'N' else 'Y' end) as EMPLOYEEY,
		 m.KNAME, m.ENAME, m.SEX,
		 m.MOBILE, m.EMAIL,m.HTELNO,
		 m.HPOSTCODE, m.HADDR, m.EMAILYN, m.SMSYN, m.JOBCODE, m.SCOUTSCHOOLYEAR, m.SCOUTSCHOOLBAN, m.LEADERSCORE
		from member m
		inner join memclscode mc on m.MEMCLSCODE = mc.MEMCLSCODE
		where m.MEMBERNO = #{MEMBERNO} and m.KNAME = #{KNAME};
	</select>

	<select id="job_list" resultType="pictVO">
		select * from jobcode where USEYN = 'Y'
		order by ORD asc
	</select>

	<!-- 지도자연공 -->
	<select id="leader_list" resultType="pictVO">
		select l.idx, ifnull(l.ADMINY, '') as ADMINY, substring(l.STARTDAY, 1,4) as YEAR, a.ASSOCIATIONNAME, t.TROOPNAME, t.TROOPNO,
		(select TROOPNAME from troop t2 where t2.TROOPNO = l.PARENT_TROOPNO) as UNITY,
		(case when l.LEADERPOSITIONCODE1 = '01' then '협조' when l.LEADERPOSITIONCODE1 = '02' then '훈육' else '전종' end) as LEADERPOSITION,
		(select LEADERPOSITIONNAME from leaderpositioncode lp where lp.LEADERPOSITIONCODE1 = l.LEADERPOSITIONCODE1 and lp.LEADERPOSITIONCODE2 = l.LEADERPOSITIONCODE2) as LEADERPOSITIONNAME,
		ifnull(o.ORGNAME, '') as ORGNAME
		, SCOUTMAGACNT, CONFIRMY, PAYY, l.ENTERDATE, LEADERORGPOSITIONCODE, ENTRYFEE
		, (case when LEADERORGPOSITIONCODE = '01' then '교장' when LEADERORGPOSITIONCODE = '02' then '교감' when LEADERORGPOSITIONCODE = '03' then '교사' when LEADERORGPOSITIONCODE = '04' then '일반' when LEADERORGPOSITIONCODE = '05' then '없음' else '' end) as LEADERORGPOSITIONNAME
		from leader l
		inner join associationcode a on l.ASSOCIATIONCODE = a.ASSOCIATIONCODE
		inner join troop t on t.TROOPNO = l.TROOPNO
		left outer join org o on o.ORGNO = l.LEADERORGNO
		
		where l.MEMBERNO = #{MEMBERNO}
		order by year desc, ADMINY desc
	</select>
	
	<!-- 대원연공 -->
	<select id="scout_list" resultType="pictVO">
		select s.idx, substring(s.STARTDAY, 1,4) as YEAR, a.ASSOCIATIONNAME, 
		(select TROOPNAME from troop t2 where t2.TROOPNO = s.PARENT_TROOPNO) as UNITY, t.TROOPNAME, t.TROOPNO, s.SCOUTSCHOOLYEAR,
		ifnull(o.ORGNAME, '') as ORGNAME, ifnull((select ORGCLSNAME from orgclscode oc where oc.ORGCLSCODE1 = o.ORGCLSCODE1 and oc.ORGCLSCODE2 = o.ORGCLSCODE2), '') as ORGCLSNAME
		, SCOUTMAGACNT, CONFIRMY, PAYY, s.ENTERDATE, ENTRYFEE, s.SCOUTCLSCODE, s.SCOUTPOSITIONCODE, SCOUTBAN, SCOUTSCHOOLBAN, sc.SCOUTCLSNAME, sp.SCOUTPOSITIONNAME
		from scout s
		inner join associationcode a on s.ASSOCIATIONCODE = a.ASSOCIATIONCODE
		inner join troop t on t.TROOPNO = s.TROOPNO
		left outer join org o on o.ORGNO = s.SCOUTORGNO
		left outer join scoutclscode sc on sc.SCOUTCLSCODE = s.SCOUTCLSCODE
		left outer join scoutpositioncode sp on sp.SCOUTPOSITIONCODE = s.SCOUTPOSITIONCODE
		where s.MEMBERNO = #{MEMBERNO}
		order by year desc
	</select>

	<!-- 연맹에서 리스트 -->
	<select id="association_list" resultType="pictVO">
		select a.*
		from associationcode a
		where a.USE_AT = 'Y'
		group by a.idx
		order by cast(PRINTORDER as unsigned) 
	</select>
	
	<!-- 지구연합회 리스트 -->
	<select id="unity_list" resultType="pictVO">
		select *, PARENT_TROOPNO as PARENTTROOPNO from troop 
		where ASSOCIATIONCODE = #{ASSOCIATIONCODE} 
		and PARENT_TROOPNO = (select TROOPNO from troop where ASSOCIATIONCODE = #{ASSOCIATIONCODE} and DISPTROOPNO like '%ASS%' limit 1 offset 0)
		order by TROOPNO asc
	</select>
	
	<!-- 단위대 리스트 -->
	<select id="troop_list" resultType="pictVO">
		 
		select t1.*, sc.SCOUTCLSNAME, tc.TROOPCLSNAME,
		(select TROOPNAME from troop t2 where t2.TROOPNO = t1.PARENT_TROOPNO) as UNITY
		from troop t1 
		left outer join scoutclscode sc on t1.SCOUTCLSCODE = sc.SCOUTCLSCODE
		left outer join troopclscode tc on t1.TROOPCLSCODE1 = tc.TROOPCLSCODE1 and t1.TROOPCLSCODE2 = tc.TROOPCLSCODE2
		where 1=1
		
		<if test="ASSOCIATIONCODE != null and ASSOCIATIONCODE != ''">
        	and t1.ASSOCIATIONCODE = #{ASSOCIATIONCODE} #연맹
        </if>
        <if test="PARENTTROOPNO != null and PARENTTROOPNO != ''">
        	and t1.PARENT_TROOPNO = #{PARENTTROOPNO}	#지구
        </if>
        <if test="TROOPLEVELCODE != null and TROOPLEVELCODE != ''">
        	and t1.TROOPLEVELCODE = #{TROOPLEVELCODE}	#단위대
        </if>
        <if test="TROOPCLSCODE != null and TROOPCLSCODE != ''">
        	and t1.TROOPCLSCODE1 = #{TROOPCLSCODE}
        </if>
		order by length(t1.DISPTROOPNO), cast(t1.DISPTROOPNO as unsigned)
	</select>
	
	<!-- 등급리스트 -->
	<select id="trooplevel_list" resultType="pictVO">
		select * from trooplevelcode
	</select>
	
	<!-- 스카우트구분리스트 -->
	<select id="scoutcls_list" resultType="pictVO">
		select * from scoutclscode order by ORD;
	</select>
	
	<!-- 단위대정보 -->
	<select id="troop_info" resultType="pictVO">
		select * from troop where TROOPNO = #{TROOPNO}
	</select>

	<!-- 회원정보 수정 -->
	<update id="person_save" parameterType="pictVO">
		update member set MEMCLSCODE= #{MEMCLSCODE}, MEMGRADECODE =#{MEMGRADECODE}, BIRTHDAY=#{BIRTHDAY}, KNAME=#{KNAME}, ENAME=#{ENAME}, SEX=#{SEX}, MOBILE=#{MOBILE}, EMAIL=#{EMAIL},
		SMSYN=#{SMSYN}, EMAILYN=#{EMAILYN}, JOBCODE=#{JOBCODE}, HPOSTCODE= #{HPOSTCODE}, HADDR=#{HADDR}, UPDATEDATE = now(), EMPLOYEEY = #{EMPLOYEEY}, HTELNO =#{HTELNO},
		LEADERSCORE =#{LEADERSCORE}, SCOUTSCHOOLYEAR =#{SCOUTSCHOOLYEAR}, SCOUTSCHOOLBAN =#{SCOUTSCHOOLBAN}
		
		where MEMBERNO = #{MEMBERNO}
	</update>
	
	<!-- 관계연결 정보 -->
	<select id="get_relation_info" resultType="pictVO">
		select mr.*, r.RELATIONNAME1, r.RELATIONNAME2, ifnull(r.BIGO, '') as BIGO, 
		(case 
			when #{MEMBERNO} = mr.FROMMEMBERNO then 
		    (select concat(m.MEMBERNO, ',' , m.KNAME, ',' ,m.BIRTHDAY, ',' ,m.ENTERDATE, ',' ,m.SEX) from member m where m.MEMBERNO = mr.TOMEMBERNO)
		    when #{MEMBERNO} = mr.TOMEMBERNO then 
		    (select concat(m.MEMBERNO, ',' , m.KNAME, ',' ,m.BIRTHDAY, ',' ,m.ENTERDATE, ',' ,m.SEX) from member m where m.MEMBERNO = mr.FROMMEMBERNO)
		    end
		) as RELATIONINFO
		from member_relation mr
		inner join member_relationcode r on mr.RELATIONCODE = r.RELATIONCODE
		
		where (mr.FROMMEMBERNO = #{MEMBERNO} or mr.TOMEMBERNO = #{MEMBERNO}) 
	</select>
	
	<!-- 관계연결 코드 리스트 -->
	<select id="get_relation_clscode" resultType="pictVO">
		select * from 
		member_relationcode
		where USEYN = 'Y'
		order by ORD asc
	</select>
	
	<!-- 관계연결에서 회원조회 -->
	<select id="get_relation_person_search" resultType="pictVO">
		select * from member where 1=1 
		<if test="MEMBERNO != null and MEMBERNO != '' ">
			and MEMBERNO = #{MEMBERNO}
		</if>
		<if test="KNAME != null and KNAME != '' ">
			and KNAME = #{KNAME}
		</if>
	</select>
	
	<!-- 관계연결 해주기 -->
	<insert id="relation_insert" parameterType="pictVO">
		insert into member_relation(FROMMEMBERNO, TOMEMBERNO, RELATIONCODE, ENTERDATE)
		values(#{FROMMEMBERNO}, #{TOMEMBERNO}, #{RELATIONCODE}, now())
	</insert>
	
	<delete id="relation_delete" parameterType="pictVO">
		delete from member_relation where idx = #{idx}
	</delete>
	
	<!-- 프로필 이미지업로드 -->
	<update id="profile_img" parameterType="pictVO">
		update member set PICIMG = #{PICIMG} where MEMBERNO = #{MEMBERNO}
	</update>
	
	
	<!-- 지도자 연공 -->
	<insert id="leader_save" parameterType="pictVO">
		INSERT INTO leader(MEMBERNO, TROOPNO, STARTDAY, ENDDAY, ASSOCIATIONCODE, PARENT_TROOPNO, LEADERPOSITIONCODE1, LEADERPOSITIONCODE2, LEADERORGNO, LEADERORGPOSITIONCODE, FEEEXCLUDECODE, ENTRYFEE, INSURANCEFEE, SCOUTMAGAFEE, LEADERMAGAFEE, INSURANCEY, SCOUTMAGACNT, LEADERMAGACNT, BANKDAY, PAYY, CONFIRMY, CONFIRMDATE, ENTERDATE, ADMINY) 
		VALUES (#{MEMBERNO}, #{TROOPNO}, #{STARTDAY}, #{ENDDAY}, #{ASSOCIATIONCODE}, #{PARENTTROOPNO}, #{LEADERPOSITIONCODE1}, #{LEADERPOSITIONCODE2}, #{LEADERORGNO}, #{LEADERORGPOSITIONCODE}, #{FEEEXCLUDECODE}, #{ENTRYFEE}, #{INSURANCEFEE}, #{SCOUTMAGAFEE}, #{LEADERMAGAFEE}, 'Y', #{SCOUTMAGACNT}, #{LEADERMAGACNT}, #{BANKDAY}, #{PAYY}, #{CONFIRMY}, now(), now(), #{ADMINY});
	</insert>
	
	<delete id="leader_del" parameterType="pictVO">
		delete from leader where idx = #{idx} and MEMBERNO = #{MEMBERNO}
	</delete>
	
	<select id="get_leader_mod" resultType="pictVO">
		select o.ORGNAME, t.TROOPNAME, t2.TROOPNAME as UNITY,  l.*
		from leader l
		left outer join troop t on l.TROOPNO = t.TROOPNO
		left outer join troop t2 on l.PARENT_TROOPNO = t2.TROOPNO
		left outer join org o on o.ORGNO = l.LEADERORGNO
		where l.idx = #{idx} and l.MEMBERNO = #{MEMBERNO}
	</select>
	
	<select id="fn_get_leaderposition" resultType="pictVO">
		select * from leaderpositioncode
		where USEYN = 'Y' and LEADERPOSITIONCODE1 = #{LEADERPOSITIONCODE1} and LEADERPOSITIONCODE2 != '00' 
		order by cast(ORD as unsigned)
	</select>
	
	<update id="leader_update" parameterType="pictVO">
		update leader set 
		LEADERPOSITIONCODE1 = #{LEADERPOSITIONCODE1}, 
		LEADERPOSITIONCODE2= #{LEADERPOSITIONCODE2}, 
		LEADERORGNO = #{LEADERORGNO}, 
		LEADERORGPOSITIONCODE = #{LEADERORGPOSITIONCODE}, 
		FEEEXCLUDECODE = #{FEEEXCLUDECODE}, 
		ENTRYFEE =#{ENTRYFEE}, 
		INSURANCEFEE = #{INSURANCEFEE}, 
		SCOUTMAGAFEE =#{SCOUTMAGAFEE}, 
		LEADERMAGAFEE = #{LEADERMAGAFEE}, 
		INSURANCEY = #{INSURANCEY}, 
		SCOUTMAGACNT = #{SCOUTMAGACNT}, 
		LEADERMAGACNT= #{LEADERMAGACNT}, 
		BANKDAY = #{BANKDAY}, 
		PAYY= #{PAYY}, 
		UPDATEDATE = now(), 
		ADMINY = #{ADMINY}
		
		where idx = #{idx} and MEMBERNO = #{MEMBERNO}
	</update>
	
	
	
	
	<!-- 대원연공 -->
	<select id="fn_get_scoutpositioncode" resultType="pictVO">
		select * from scoutpositioncode
		where USEYN = 'Y' and SCOUTCLSCODE = #{SCOUTCLSCODE}
		order by cast(ORD as unsigned)
	</select>
	
	<select id="get_scout_mod" resultType="pictVO">
		select o.ORGNAME,t.TROOPNAME, t2.TROOPNAME as UNITY, s.*
		from scout s
		left outer join troop t on s.TROOPNO = t.TROOPNO
		left outer join troop t2 on s.PARENT_TROOPNO = t2.TROOPNO
		left outer join org o on o.ORGNO = s.SCOUTORGNO
		where s.idx = #{idx} and s.MEMBERNO = #{MEMBERNO}
	</select>
	
	<insert id="scout_save" parameterType="pictVO">
		INSERT INTO scout(MEMBERNO, TROOPNO, STARTDAY, ENDDAY, ASSOCIATIONCODE, PARENT_TROOPNO, SCOUTORGNO, SCOUTSCHOOLYEAR, SCOUTSCHOOLBAN, SCOUTCLSCODE, SCOUTPOSITIONCODE, SCOUTBAN, FEEEXCLUDECODE, ENTRYFEE, INSURANCEFEE, SCOUTMAGAFEE, INSURANCEY, SCOUTMAGACNT, BANKDAY, PAYY, CONFIRMY, CONFIRMDATE, ENTERDATE) 
		VALUES (#{MEMBERNO}, #{TROOPNO}, #{STARTDAY}, #{ENDDAY}, #{ASSOCIATIONCODE}, #{PARENTTROOPNO}, #{SCOUTORGNO}, #{SCOUTSCHOOLYEAR}, #{SCOUTSCHOOLBAN}, #{SCOUTCLSCODE}, #{SCOUTPOSITIONCODE}, #{SCOUTBAN}, #{FEEEXCLUDECODE}, #{ENTRYFEE}, #{INSURANCEFEE}, #{SCOUTMAGAFEE}, 'Y', #{SCOUTMAGACNT}, #{BANKDAY}, #{PAYY}, #{CONFIRMY}, now(), now());
	</insert>
	
	<update id="scout_update" parameterType="pictVO">
		update scout set
		SCOUTORGNO = #{SCOUTORGNO},
		SCOUTSCHOOLYEAR = #{SCOUTSCHOOLYEAR}, 
		SCOUTSCHOOLBAN= #{SCOUTSCHOOLBAN}, 
		
		SCOUTCLSCODE = #{SCOUTCLSCODE},
		SCOUTPOSITIONCODE = #{SCOUTPOSITIONCODE},
		SCOUTBAN = #{SCOUTBAN},
		 
		FEEEXCLUDECODE = #{FEEEXCLUDECODE}, 
		ENTRYFEE =#{ENTRYFEE}, 
		INSURANCEFEE = #{INSURANCEFEE}, 
		SCOUTMAGAFEE =#{SCOUTMAGAFEE}, 
		INSURANCEY = #{INSURANCEY}, 
		SCOUTMAGACNT = #{SCOUTMAGACNT}, 
		BANKDAY = #{BANKDAY}, 
		PAYY= #{PAYY}, 
		UPDATEDATE = now()
		
		where idx = #{idx} and MEMBERNO = #{MEMBERNO}
	</update>
	
	<delete id="scout_del" parameterType="pictVO">
		delete from scout where idx = #{idx} and MEMBERNO = #{MEMBERNO}
	</delete>
	
	
	<!-- 지도자/대원 학교단체에서 구분조회 -->
	<select id="fn_get_orgclscode" resultType="pictVO">
		select * 
		from orgclscode
		where ORGCLSCODE1 = #{ORGCLSCODE1}
		and ORGCLSCODE2 != '00'
		order by cast(ORD as unsigned)
	</select>
	
	<!-- 지도자/대원 학교단체에서 관할교육청조회 -->
	<select id="fn_get_parentorgno" resultType="pictVO">
		select * from org where associationcode = #{ASSOCIATIONCODE} and ORGCLSCODE1 = '02'
		order by ORGNAME asc
	</select>
	
	<!-- 학교 단체 검색 버튼 클릭! -->
	<select id="search_org" resultType="pictVO">
		select a.ASSOCIATIONNAME
		, (select ORGCLSNAME from orgclscode oc where ORGCLSCODE1 = o.ORGCLSCODE1 limit 1) as ORGCLSNAME1
		, (select ORGCLSNAME from orgclscode oc where ORGCLSCODE1 = o.ORGCLSCODE1 and ORGCLSCODE2 = o.ORGCLSCODE2  limit 1) as ORGCLSNAME2
		 , o.* 
		from org o
		left outer join associationcode a on a.ASSOCIATIONCODE = o.ASSOCIATIONCODE
		where 1=1
		
		<if test="ASSOCIATIONCODE != null and ASSOCIATIONCODE != '' ">
			and o.ASSOCIATIONCODE = #{ASSOCIATIONCODE} 
		</if>
		<if test="ORGCLSCODE1 != null and ORGCLSCODE1 != '' ">
			and o.ORGCLSCODE1 = #{ORGCLSCODE1}
		</if>
		<if test="ORGCLSCODE2 != null and ORGCLSCODE2 != '' ">
			and o.ORGCLSCODE2 = #{ORGCLSCODE2}
		</if>
		<if test="PARENTORGNO != null and PARENTORGNO != '' ">
			and o.PARENT_ORGNO = #{PARENTORGNO}
		</if>
		<if test="search_orgtext != null and search_orgtext != '' ">
			and (
				o.ORGNAME LIKE CONCAT('%', #{search_orgtext}, '%')
			) 
		</if>
		order by ORGCLSCODE1 desc, ORGNAME asc;
	</select>
	
	<!-- 메인 대원 단체 저장 -->
	<update id="main_scout_org_save" parameterType="pictVO">
		update member set SCOUTORGNO = #{SCOUTORGNO}, SCOUTORGCLSCODE1 = #{SCOUTORGCLSCODE1}, SCOUTORGCLSCODE2 = #{SCOUTORGCLSCODE2}, UPDATEDATE = now()
		where MEMBERNO = #{MEMBERNO}
	</update>
	
	<!-- 메인 지도자 단체 저장 -->
	<update id="main_leader_org_save" parameterType="pictVO">
		update member set LEADERORGNO = #{LEADERORGNO}, LEADERORGPOSITIONCODE = #{LEADERORGPOSITIONCODE}, UPDATEDATE = now()
		where MEMBERNO = #{MEMBERNO}
	</update>
	
	<!-- 대원 신규 등록 -->
	<insert id="new_person" parameterType="pictVO">
		insert into member (MEMBERNO, MEMCLSCODE, MEMGRADECODE, BIRTHDAY, EMPLOYEEY, KNAME, ENAME, SEX, HTELNO, MOBILE, EMAIL, SMSYN, EMAILYN, JOBCODE, HPOSTCODE, HADDR, ENTERDATE)
		values(
			(select max(MEMBERNO + 1) from member t), #{MEMCLSCODE}, #{MEMGRADECODE}, #{BIRTHDAY}, #{EMPLOYEEY}, #{KNAME}, #{ENAME}, #{SEX}, #{HTELNO}, #{MOBILE}, #{EMAIL}, #{SMSYN}, #{EMAILYN}, #{JOBCODE}, #{HPOSTCODE}, #{HADDR}, now()
		)
	</insert>
	
	
	
	
	
	<!-- 그뭐야 제일 위에[꺼 -->
	<select id="organ_search" resultType="pictVO">
		select 
			(select TROOPNAME from troop t1 where t1.TROOPNO = t.PARENT_TROOPNO limit 1) as PARENTTROOPNAME, 
		    sc.SCOUTCLSNAME,
		    (select TROOPCLSNAME from troopclscode tc where tc.TROOPCLSCODE1 = t.TROOPCLSCODE1 and tc.TROOPCLSCODE2 = t.TROOPCLSCODE2) as TROOPCLSNAME,
			t.*
		from troop t
		inner join associationcode a on t.ASSOCIATIONCODE = a.ASSOCIATIONCODE
        left outer join scoutclscode sc on sc.SCOUTCLSCODE = t.SCOUTCLSCODE
        left outer join org o on o.ORGNO = t.ORGNO
        where 1=1
		<if test="ASSOCIATIONCODE != null and ASSOCIATIONCODE != ''">
        	and t.ASSOCIATIONCODE = #{ASSOCIATIONCODE} 
        </if>
        <if test="PARENTTROOPNO != null and PARENTTROOPNO != ''">
        	and t.PARENT_TROOPNO = #{PARENTTROOPNO}
        </if>
        <if test="TROOPLEVELCODE != null and TROOPLEVELCODE != ''">
        	 and t.TROOPLEVELCODE = #{TROOPLEVELCODE}
        </if>
        <if test="TROOPCLSCODE1 != null and TROOPCLSCODE1 != ''">
        	and t.TROOPCLSCODE1 = #{TROOPCLSCODE1}
        </if>
        <if test="TROOPCLSCODE2 != null and TROOPCLSCODE2 != ''">
        	and t.TROOPCLSCODE2 = #{TROOPCLSCODE2}
        </if>
        <if test="SCOUTCLSCODE != null and SCOUTCLSCODE != ''">
        	and t.SCOUTCLSCODE = #{SCOUTCLSCODE}
        </if>
        <if test="PARENTORGNO != null and PARENTORGNO != ''">
        	and o.PARENT_ORGNO = #{PARENTORGNO}
        </if>
        <if test="search_text != null and search_text != ''">
	        <if test="search_type != null and search_type != '' and search_type == 'number'">
	        	and t.DISPTROOPNO = #{search_text}
	        </if>
	        <if test="search_type != null and search_type != '' and search_type == 'text'">
				and (
					t.TROOPNAME LIKE CONCAT('%', #{search_text}, '%')
				) 
	        </if>
        </if>
        
        #and t.PARENT_TROOPNO = 9689 and t.ORGNO is not null and t.ORGNO != ''
        
        order by cast(t.PARENT_TROOPNO as unsigned), length(t.DISPTROOPNO), cast(t.DISPTROOPNO as unsigned)
		
	</select>
	
	<select id="troopclscode1_search" resultType="pictVO">
		select * from 
		troopclscode
		where USEYN= 'Y'
		and TROOPCLSCODE1 = #{TROOPCLSCODE1}
		and TROOPCLSCODE2 != '00'
		order by ORD
		
	</select>



	

</mapper>
