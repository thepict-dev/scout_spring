<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="pict.mapper.PictMapper">	

	<select id="scout_left_search_list" resultType="pictVO">
		select m.MEMBERNO, m.KNAME, m.BIRTHDAY, m.MEMCLSCODE, m.MEMGRADECODE, m.TROOPSCOUTY, m.TROOPLEADERY, m.LEADERINCNT, m.ENTERDATE, m.SCOUTINCNT, 
		(case when li.idx is not null then 'Y' else 'N' end) as LIFE_YN,
		(case when m.EMPLOYEEY = '' then 'N' when m.EMPLOYEEY is null then 'N' when m.EMPLOYEEY = 'N' then 'N' else 'Y' end) as EMPLOYEEY
		from member m
		inner join memclscode mc on m.MEMCLSCODE = mc.MEMCLSCODE
		left outer join lifetime li on li.MEMBERNO = m.MEMBERNO
		where 1=1
		<if test="search_kname != null and search_kname != '' ">
			and KNAME LIKE CONCAT('%', #{search_kname}, '%')
		</if>
		<if test="search_memberno != null and search_memberno != '' ">
			and m.MEMBERNO =#{search_memberno}
		</if>
		<if test="search_memberno_se != null and search_memberno_se != '' ">
			and m.MEMBERNO =#{search_memberno_se}
		</if>
		
		<if test="search_birthday != null and search_birthday != '' ">
			and m.BIRTHDAY = #{search_birthday}
		</if>
		
		<if test="search_history != null and search_history != ''">
			<choose>
	            <when test="search_history == 3"> 
	                and li.idx is not null 
	            </when>
	            <when test="search_history == 2">
	            	and m.TROOPLEADERY = 'Y'
	            </when>
	            <otherwise> 
	                and m.TROOPSCOUTY = 'Y'
	            </otherwise>
	        </choose>
		</if>
		
		<if test="search_memclscode != null and search_memclscode != ''">
			and m.MEMCLSCODE = #{search_memclscode}
		</if>
		
		<if test="search_memgradecode != null and search_memgradecode != ''">
			and m.MEMGRADECODE = #{search_memgradecode}
		</if>
		
		<if test="search_start != null and search_start != '' and search_end != null and search_end != '' ">
			and m.ENTERDATE between #{search_start} and #{search_end}
		</if>
		
	</select>

	<!-- 대원/리더 기본정보 조회 -->
	<select id="get_per_info" resultType="pictVO">
		select m.MEMBERNO, m.MEMCLSCODE, m.MEMGRADECODE, m.PICIMG, m.LEADERINCNT, m.ENTERDATE, m.SCOUTINCNT, m.PICIMG, m.SCOUTCLSCODE, m.SCOUTORGNO, 
		ifnull((select orgname from org o where o.ORGNO = m.SCOUTORGNO), '') SCOUTORGNAME,
		ifnull((select orgname from org o where o.ORGNO = m.LEADERORGNO),'') LEADERORGNAME,
		ifnull(m.LEADERORGPOSITIONCODE, '') LEADERORGPOSITIONCODE,
		 m.BIRTHDAY, 
		 (case when m.EMPLOYEEY = '' then 'N' when m.EMPLOYEEY is null then 'N' when m.EMPLOYEEY = 'N' then 'N' else m.EMPLOYEEY end) as EMPLOYEEY,
		 m.KNAME, m.ENAME, m.SEX,
		 m.MOBILE, m.EMAIL,m.HTELNO, m.BIGO,
		 m.HPOSTCODE, m.HADDR, m.EMAILYN, m.SMSYN, m.JOBCODE, m.SCOUTSCHOOLYEAR, m.SCOUTSCHOOLBAN, m.LEADERSCORE, m.TROOPSCOUTY, m.TROOPLEADERY
		from member m
		inner join memclscode mc on m.MEMCLSCODE = mc.MEMCLSCODE
		where m.MEMBERNO = #{MEMBERNO} and m.KNAME = #{KNAME};
	</select>

	<select id="job_list" resultType="pictVO">
		select * from jobcode where USEYN = 'Y'
		order by ORD asc
	</select>

	<!-- 지도자연공 -->
	<select id="leader_list" resultType="pictVO">
		select l.idx, ifnull(l.ADMINY, '') as ADMINY, substring(l.STARTDAY, 1,4) as YEAR, a.ASSOCIATIONNAME, t.TROOPNAME, t.TROOPNO,
		(select TROOPNAME from troop t2 where t2.TROOPNO = l.PARENT_TROOPNO) as UNITY,
		(case when l.LEADERPOSITIONCODE1 = '01' then '협조' when l.LEADERPOSITIONCODE1 = '02' then '훈육' else '전종' end) as LEADERPOSITION,
		(select LEADERPOSITIONNAME from leaderpositioncode lp where lp.LEADERPOSITIONCODE1 = l.LEADERPOSITIONCODE1 and lp.LEADERPOSITIONCODE2 = l.LEADERPOSITIONCODE2) as LEADERPOSITIONNAME,
		ifnull(o.ORGNAME, '') as ORGNAME
		, SCOUTMAGACNT, CONFIRMY, PAYY, l.ENTERDATE, LEADERORGPOSITIONCODE, ENTRYFEE
		, (case when LEADERORGPOSITIONCODE = '01' then '교장' when LEADERORGPOSITIONCODE = '02' then '교감' when LEADERORGPOSITIONCODE = '03' then '교사' when LEADERORGPOSITIONCODE = '04' then '일반' when LEADERORGPOSITIONCODE = '05' then '없음' else '' end) as LEADERORGPOSITIONNAME
		from leader l
		inner join associationcode a on l.ASSOCIATIONCODE = a.ASSOCIATIONCODE
		inner join troop t on t.TROOPNO = l.TROOPNO
		left outer join org o on o.ORGNO = l.LEADERORGNO
		
		where l.MEMBERNO = #{MEMBERNO}
		order by year desc, ADMINY desc
	</select>
	
	<!-- 대원연공 -->
	<select id="scout_list" resultType="pictVO">
		select s.idx, substring(s.STARTDAY, 1,4) as YEAR, a.ASSOCIATIONNAME, 
		(select TROOPNAME from troop t2 where t2.TROOPNO = s.PARENT_TROOPNO) as UNITY, t.TROOPNAME, t.TROOPNO, s.SCOUTSCHOOLYEAR,
		ifnull(o.ORGNAME, '') as ORGNAME, ifnull((select ORGCLSNAME from orgclscode oc where oc.ORGCLSCODE1 = o.ORGCLSCODE1 and oc.ORGCLSCODE2 = o.ORGCLSCODE2), '') as ORGCLSNAME
		, SCOUTMAGACNT, CONFIRMY, PAYY, s.ENTERDATE, ENTRYFEE, s.SCOUTCLSCODE, s.SCOUTPOSITIONCODE, SCOUTBAN, SCOUTSCHOOLBAN, sc.SCOUTCLSNAME, sp.SCOUTPOSITIONNAME
		from scout s
		inner join associationcode a on s.ASSOCIATIONCODE = a.ASSOCIATIONCODE
		inner join troop t on t.TROOPNO = s.TROOPNO
		left outer join org o on o.ORGNO = s.SCOUTORGNO
		left outer join scoutclscode sc on sc.SCOUTCLSCODE = s.SCOUTCLSCODE
		left outer join scoutpositioncode sp on sp.SCOUTPOSITIONCODE = s.SCOUTPOSITIONCODE
		where s.MEMBERNO = #{MEMBERNO}
		order by year desc
	</select>

	<!-- 연맹에서 리스트 -->
	<select id="association_list" resultType="pictVO">
		select a.*
		from associationcode a
		where a.USE_AT = 'Y'
		group by a.idx
		order by cast(PRINTORDER as unsigned) 
	</select>
	
	<!-- 지구연합회 리스트 -->
	<select id="unity_list" resultType="pictVO">
		select *, PARENT_TROOPNO as PARENTTROOPNO from troop 
		where ASSOCIATIONCODE = #{ASSOCIATIONCODE} 
		and PARENT_TROOPNO = (select TROOPNO from troop where ASSOCIATIONCODE = #{ASSOCIATIONCODE} and DISPTROOPNO like '%ASS%' limit 1 offset 0)
		order by TROOPNO asc
	</select>
	
	<!-- 단위대 리스트 -->
	<select id="troop_list" resultType="pictVO">
		 
		select t1.*, sc.SCOUTCLSNAME, tc.TROOPCLSNAME,
		(select TROOPNAME from troop t2 where t2.TROOPNO = t1.PARENT_TROOPNO) as UNITY
		from troop t1 
		left outer join scoutclscode sc on t1.SCOUTCLSCODE = sc.SCOUTCLSCODE
		left outer join troopclscode tc on t1.TROOPCLSCODE1 = tc.TROOPCLSCODE1 and t1.TROOPCLSCODE2 = tc.TROOPCLSCODE2
		where 1=1
		
		<if test="ASSOCIATIONCODE != null and ASSOCIATIONCODE != ''">
        	and t1.ASSOCIATIONCODE = #{ASSOCIATIONCODE} #연맹
        </if>
        <if test="PARENTTROOPNO != null and PARENTTROOPNO != ''">
        	and t1.PARENT_TROOPNO = #{PARENTTROOPNO}	#지구
        </if>
        <if test="TROOPLEVELCODE != null and TROOPLEVELCODE != ''">
        	and t1.TROOPLEVELCODE = #{TROOPLEVELCODE}	#단위대
        </if>
        <if test="TROOPCLSCODE != null and TROOPCLSCODE != ''">
        	and t1.TROOPCLSCODE1 = #{TROOPCLSCODE}
        </if>
		order by length(t1.DISPTROOPNO), cast(t1.DISPTROOPNO as unsigned)
	</select>
	
	<!-- 등급리스트 -->
	<select id="trooplevel_list" resultType="pictVO">
		select * from trooplevelcode
	</select>
	
	<!-- 스카우트구분리스트 -->
	<select id="scoutcls_list" resultType="pictVO">
		select * from scoutclscode order by ORD;
	</select>
	
	<!-- 단위대정보 -->
	<select id="troop_info" resultType="pictVO">
		select * from troop where TROOPNO = #{TROOPNO}
	</select>

	<!-- 회원정보 수정 -->
	<update id="person_save" parameterType="pictVO">
		update member set MEMCLSCODE= #{MEMCLSCODE}, MEMGRADECODE =#{MEMGRADECODE}, BIRTHDAY=#{BIRTHDAY}, KNAME=#{KNAME}, ENAME=#{ENAME}, SEX=#{SEX}, MOBILE=#{MOBILE}, EMAIL=#{EMAIL},
		SMSYN=#{SMSYN}, EMAILYN=#{EMAILYN}, JOBCODE=#{JOBCODE}, HPOSTCODE= #{HPOSTCODE}, HADDR=#{HADDR}, UPDATEDATE = now(), EMPLOYEEY = #{EMPLOYEEY}, HTELNO =#{HTELNO},
		LEADERSCORE =#{LEADERSCORE}, SCOUTSCHOOLYEAR =#{SCOUTSCHOOLYEAR}, SCOUTSCHOOLBAN =#{SCOUTSCHOOLBAN}, TROOPSCOUTY=#{TROOPSCOUTY}, TROOPLEADERY=#{TROOPLEADERY},
		BIGO=#{BIGO}
		
		where MEMBERNO = #{MEMBERNO}
	</update>
	
	<!-- 관계연결 정보 -->
	<select id="get_relation_info" resultType="pictVO">
		select mr.*, r.RELATIONNAME1, r.RELATIONNAME2, ifnull(r.BIGO, '') as BIGO, 
		(case 
			when #{MEMBERNO} = mr.FROMMEMBERNO then 
		    (select concat(m.MEMBERNO, ',' , m.KNAME, ',' ,m.BIRTHDAY, ',' ,m.ENTERDATE, ',' ,m.SEX) from member m where m.MEMBERNO = mr.TOMEMBERNO)
		    when #{MEMBERNO} = mr.TOMEMBERNO then 
		    (select concat(m.MEMBERNO, ',' , m.KNAME, ',' ,m.BIRTHDAY, ',' ,m.ENTERDATE, ',' ,m.SEX) from member m where m.MEMBERNO = mr.FROMMEMBERNO)
		    end
		) as RELATIONINFO
		from member_relation mr
		inner join member_relationcode r on mr.RELATIONCODE = r.RELATIONCODE
		
		where (mr.FROMMEMBERNO = #{MEMBERNO} or mr.TOMEMBERNO = #{MEMBERNO}) 
	</select>
	
	<!-- 관계연결 코드 리스트 -->
	<select id="get_relation_clscode" resultType="pictVO">
		select * from 
		member_relationcode
		where USEYN = 'Y'
		order by ORD asc
	</select>
	
	<!-- 관계연결에서 회원조회 -->
	<select id="get_relation_person_search" resultType="pictVO">
		select * from member where 1=1 
		<if test="MEMBERNO != null and MEMBERNO != '' ">
			and MEMBERNO = #{MEMBERNO}
		</if>
		<if test="KNAME != null and KNAME != '' ">
			and KNAME = #{KNAME}
		</if>
	</select>
	
	<!-- 관계연결 해주기 -->
	<insert id="relation_insert" parameterType="pictVO">
		insert into member_relation(FROMMEMBERNO, TOMEMBERNO, RELATIONCODE, ENTERDATE)
		values(#{FROMMEMBERNO}, #{TOMEMBERNO}, #{RELATIONCODE}, now())
	</insert>
	
	<delete id="relation_delete" parameterType="pictVO">
		delete from member_relation where idx = #{idx}

	</delete>
	
	<!-- 프로필 이미지업로드 -->
	<update id="profile_img" parameterType="pictVO">
		update member set PICIMG = #{PICIMG} where MEMBERNO = #{MEMBERNO}
	</update>
	
	
	<!-- 지도자 연공 -->
	<insert id="leader_save" parameterType="pictVO">
		INSERT INTO leader(MEMBERNO, TROOPNO, STARTDAY, ENDDAY, ASSOCIATIONCODE, PARENT_TROOPNO, LEADERPOSITIONCODE1, LEADERPOSITIONCODE2, LEADERORGNO, LEADERORGPOSITIONCODE, FEEEXCLUDECODE, ENTRYFEE, INSURANCEFEE, SCOUTMAGAFEE, LEADERMAGAFEE, INSURANCEY, SCOUTMAGACNT, LEADERMAGACNT, BANKDAY, PAYY, CONFIRMY, CONFIRMDATE, ENTERDATE, ADMINY) 
		VALUES (#{MEMBERNO}, #{TROOPNO}, #{STARTDAY}, #{ENDDAY}, #{ASSOCIATIONCODE}, #{PARENTTROOPNO}, #{LEADERPOSITIONCODE1}, #{LEADERPOSITIONCODE2}, #{LEADERORGNO}, #{LEADERORGPOSITIONCODE}, #{FEEEXCLUDECODE}, #{ENTRYFEE}, #{INSURANCEFEE}, #{SCOUTMAGAFEE}, #{LEADERMAGAFEE}, 'Y', #{SCOUTMAGACNT}, #{LEADERMAGACNT}, #{BANKDAY}, #{PAYY}, #{CONFIRMY}, now(), now(), #{ADMINY});
	</insert>
	
	<delete id="leader_del" parameterType="pictVO">
		delete from leader where idx = #{idx} and MEMBERNO = #{MEMBERNO}
	</delete>
	
	<select id="get_leader_mod" resultType="pictVO">
		select o.ORGNAME, t.TROOPNAME, t2.TROOPNAME as UNITY,  l.*
		from leader l
		left outer join troop t on l.TROOPNO = t.TROOPNO
		left outer join troop t2 on l.PARENT_TROOPNO = t2.TROOPNO
		left outer join org o on o.ORGNO = l.LEADERORGNO
		where l.idx = #{idx} and l.MEMBERNO = #{MEMBERNO}
	</select>
	
	<select id="fn_get_leaderposition" resultType="pictVO">
		select * from leaderpositioncode
		where USEYN = 'Y' and LEADERPOSITIONCODE1 = #{LEADERPOSITIONCODE1} and LEADERPOSITIONCODE2 != '00' 
		order by cast(ORD as unsigned)
	</select>
	
	<update id="leader_update" parameterType="pictVO">
		update leader set 
		ASSOCIATIONCODE = #{ASSOCIATIONCODE},
		PARENT_TROOPNO = #{PARENTTROOPNO},
		TROOPNO = #{TROOPNO},
		STARTDAY = #{STARTDAY},
		ENDDAY = #{ENDDAY},
		CONFIRMY = #{CONFIRMY},
		LEADERPOSITIONCODE1 = #{LEADERPOSITIONCODE1}, 
		LEADERPOSITIONCODE2= #{LEADERPOSITIONCODE2}, 
		LEADERORGNO = #{LEADERORGNO}, 
		LEADERORGPOSITIONCODE = #{LEADERORGPOSITIONCODE}, 
		FEEEXCLUDECODE = #{FEEEXCLUDECODE}, 
		ENTRYFEE =#{ENTRYFEE}, 
		INSURANCEFEE = #{INSURANCEFEE}, 
		SCOUTMAGAFEE =#{SCOUTMAGAFEE}, 
		LEADERMAGAFEE = #{LEADERMAGAFEE}, 
		INSURANCEY = #{INSURANCEY}, 
		SCOUTMAGACNT = #{SCOUTMAGACNT}, 
		LEADERMAGACNT= #{LEADERMAGACNT}, 
		BANKDAY = #{BANKDAY}, 
		PAYY= #{PAYY}, 
		UPDATEDATE = now(), 
		ADMINY = #{ADMINY}
		
		where idx = #{idx} and MEMBERNO = #{MEMBERNO}
	</update>
	
	
	
	
	<!-- 대원연공 -->
	<select id="fn_get_scoutpositioncode" resultType="pictVO">
		select * from scoutpositioncode
		where USEYN = 'Y' and SCOUTCLSCODE = #{SCOUTCLSCODE}
		order by cast(ORD as unsigned)
	</select>
	
	<select id="get_scout_mod" resultType="pictVO">
		select o.ORGNAME,t.TROOPNAME, t2.TROOPNAME as UNITY, s.*
		from scout s
		left outer join troop t on s.TROOPNO = t.TROOPNO
		left outer join troop t2 on s.PARENT_TROOPNO = t2.TROOPNO
		left outer join org o on o.ORGNO = s.SCOUTORGNO
		where s.idx = #{idx} and s.MEMBERNO = #{MEMBERNO}
	</select>
	
	<insert id="scout_save" parameterType="pictVO">
		INSERT INTO scout(MEMBERNO, TROOPNO, STARTDAY, ENDDAY, ASSOCIATIONCODE, PARENT_TROOPNO, SCOUTORGNO, SCOUTSCHOOLYEAR, SCOUTSCHOOLBAN, SCOUTCLSCODE, SCOUTPOSITIONCODE, SCOUTBAN, FEEEXCLUDECODE, ENTRYFEE, INSURANCEFEE, SCOUTMAGAFEE, INSURANCEY, SCOUTMAGACNT, BANKDAY, PAYY, CONFIRMY, CONFIRMDATE, ENTERDATE) 
		VALUES (#{MEMBERNO}, #{TROOPNO}, #{STARTDAY}, #{ENDDAY}, #{ASSOCIATIONCODE}, #{PARENTTROOPNO}, #{SCOUTORGNO}, #{SCOUTSCHOOLYEAR}, #{SCOUTSCHOOLBAN}, #{SCOUTCLSCODE}, #{SCOUTPOSITIONCODE}, #{SCOUTBAN}, #{FEEEXCLUDECODE}, #{ENTRYFEE}, #{INSURANCEFEE}, #{SCOUTMAGAFEE}, 'Y', #{SCOUTMAGACNT}, #{BANKDAY}, #{PAYY}, #{CONFIRMY}, now(), now());
	</insert>
	
	<update id="scout_update" parameterType="pictVO">
		update scout set
		ASSOCIATIONCODE = #{ASSOCIATIONCODE},
		PARENT_TROOPNO = #{PARENTTROOPNO},
		TROOPNO = #{TROOPNO},
		STARTDAY = #{STARTDAY},
		ENDDAY = #{ENDDAY},
		CONFIRMY = #{CONFIRMY},
		SCOUTORGNO = #{SCOUTORGNO},
		SCOUTSCHOOLYEAR = #{SCOUTSCHOOLYEAR}, 
		SCOUTSCHOOLBAN= #{SCOUTSCHOOLBAN}, 
		
		SCOUTCLSCODE = #{SCOUTCLSCODE},
		SCOUTPOSITIONCODE = #{SCOUTPOSITIONCODE},
		SCOUTBAN = #{SCOUTBAN},
		 
		FEEEXCLUDECODE = #{FEEEXCLUDECODE}, 
		ENTRYFEE =#{ENTRYFEE}, 
		INSURANCEFEE = #{INSURANCEFEE}, 
		SCOUTMAGAFEE =#{SCOUTMAGAFEE}, 
		INSURANCEY = #{INSURANCEY}, 
		SCOUTMAGACNT = #{SCOUTMAGACNT}, 
		BANKDAY = #{BANKDAY}, 
		PAYY= #{PAYY}, 
		UPDATEDATE = now()
		
		where idx = #{idx} and MEMBERNO = #{MEMBERNO}
	</update>
	
	<delete id="scout_del" parameterType="pictVO">
		delete from scout where idx = #{idx} and MEMBERNO = #{MEMBERNO}
	</delete>
	
	
	<!-- 지도자/대원 학교단체에서 구분조회 -->
	<select id="fn_get_orgclscode" resultType="pictVO">
		select * 
		from orgclscode
		where ORGCLSCODE1 = #{ORGCLSCODE1}
		and ORGCLSCODE2 != '00'
		order by cast(ORD as unsigned)
	</select>
	
	<!-- 지도자/대원 학교단체에서 관할교육청조회 -->
	<select id="fn_get_parentorgno" resultType="pictVO">
		select * from org where associationcode = #{ASSOCIATIONCODE} and ORGCLSCODE1 = '02'
		order by ORGNAME asc
	</select>
	
	<!-- 학교 단체 검색 버튼 클릭! -->
	<select id="search_org" resultType="pictVO">
		select a.ASSOCIATIONNAME
		, (select ORGCLSNAME from orgclscode oc where ORGCLSCODE1 = o.ORGCLSCODE1 limit 1) as ORGCLSNAME1
		, (select ORGCLSNAME from orgclscode oc where ORGCLSCODE1 = o.ORGCLSCODE1 and ORGCLSCODE2 = o.ORGCLSCODE2  limit 1) as ORGCLSNAME2
        , ifnull((select ORGNAME from org o2 where o.PARENT_ORGNO = o2.ORGNO), '') as PARENTORGNAME
		 , o.* 
		from org o
		left outer join associationcode a on a.ASSOCIATIONCODE = o.ASSOCIATIONCODE
		where 1=1
		
		<if test="ASSOCIATIONCODE != null and ASSOCIATIONCODE != '' ">
			and o.ASSOCIATIONCODE = #{ASSOCIATIONCODE} 
		</if>
		<if test="ORGCLSCODE1 != null and ORGCLSCODE1 != '' ">
			and o.ORGCLSCODE1 = #{ORGCLSCODE1}
		</if>
		<if test="ORGCLSCODE2 != null and ORGCLSCODE2 != '' ">
			and o.ORGCLSCODE2 = #{ORGCLSCODE2}
		</if>
		<if test="PARENTORGNO != null and PARENTORGNO != '' ">
			and o.PARENT_ORGNO = #{PARENTORGNO}
		</if>
		<if test="search_orgtext != null and search_orgtext != '' ">
			and (
				o.ORGNAME LIKE CONCAT('%', #{search_orgtext}, '%')
			) 
		</if>
		order by ORGCLSCODE1 desc, ORGNAME asc;
	</select>
	
	<!-- 메인 대원 단체 저장 -->
	<update id="main_scout_org_save" parameterType="pictVO">
		update member set SCOUTORGNO = #{SCOUTORGNO}, SCOUTORGCLSCODE1 = #{SCOUTORGCLSCODE1}, SCOUTORGCLSCODE2 = #{SCOUTORGCLSCODE2}, UPDATEDATE = now()
		where MEMBERNO = #{MEMBERNO}
	</update>
	
	<!-- 메인 지도자 단체 저장 -->
	<update id="main_leader_org_save" parameterType="pictVO">
		update member set LEADERORGNO = #{LEADERORGNO}, LEADERORGPOSITIONCODE = #{LEADERORGPOSITIONCODE}, UPDATEDATE = now()
		where MEMBERNO = #{MEMBERNO}
	</update>
	
	<!-- 대원 신규 등록 -->
	<insert id="new_person" parameterType="pictVO">
		insert into member (MEMBERNO, MEMCLSCODE, MEMGRADECODE, BIRTHDAY, EMPLOYEEY, KNAME, ENAME, SEX, HTELNO, MOBILE, EMAIL, SMSYN, EMAILYN, JOBCODE, HPOSTCODE, HADDR, ENTERDATE)
		values(
			(select max(MEMBERNO + 1) from member t), #{MEMCLSCODE}, #{MEMGRADECODE}, #{BIRTHDAY}, #{EMPLOYEEY}, #{KNAME}, #{ENAME}, #{SEX}, #{HTELNO}, #{MOBILE}, #{EMAIL}, #{SMSYN}, #{EMAILYN}, #{JOBCODE}, #{HPOSTCODE}, #{HADDR}, now()
		)
	</insert>
	
	
	
	
	
	<!-- 조직통합창에서 단위대 리스트 조회 -->
	<select id="organ_search" resultType="pictVO">
		select 
			(select TROOPNAME from troop t1 where t1.TROOPNO = t.PARENT_TROOPNO limit 1) as PARENTTROOPNAME, 
		    sc.SCOUTCLSNAME,
		    (select TROOPCLSNAME from troopclscode tc where tc.TROOPCLSCODE1 = t.TROOPCLSCODE1 and tc.TROOPCLSCODE2 = t.TROOPCLSCODE2) as TROOPCLSNAME,
			t.*
		from troop t
		inner join associationcode a on t.ASSOCIATIONCODE = a.ASSOCIATIONCODE
        left outer join scoutclscode sc on sc.SCOUTCLSCODE = t.SCOUTCLSCODE
        left outer join org o on o.ORGNO = t.ORGNO
        where 1=1
		<if test="ASSOCIATIONCODE != null and ASSOCIATIONCODE != ''">
        	and t.ASSOCIATIONCODE = #{ASSOCIATIONCODE} 
        </if>
        <if test="PARENTTROOPNO != null and PARENTTROOPNO != ''">
        	and t.PARENT_TROOPNO = #{PARENTTROOPNO}
        </if>
        <if test="TROOPLEVELCODE != null and TROOPLEVELCODE != ''">
        	 and t.TROOPLEVELCODE = #{TROOPLEVELCODE}
        </if>
        <if test="TROOPCLSCODE1 != null and TROOPCLSCODE1 != ''">
        	and t.TROOPCLSCODE1 = #{TROOPCLSCODE1}
        </if>
        <if test="TROOPCLSCODE2 != null and TROOPCLSCODE2 != ''">
        	and t.TROOPCLSCODE2 = #{TROOPCLSCODE2}
        </if>
        <if test="SCOUTCLSCODE != null and SCOUTCLSCODE != ''">
        	and t.SCOUTCLSCODE = #{SCOUTCLSCODE}
        </if>
        <if test="PARENTORGNO != null and PARENTORGNO != ''">
        	and o.PARENT_ORGNO = #{PARENTORGNO}
        </if>
        <if test="search_text != null and search_text != ''">
	        <if test="search_type != null and search_type != '' and search_type == 'number'">
	        	and t.DISPTROOPNO = #{search_text}
	        </if>
	        <if test="search_type != null and search_type != '' and search_type == 'text'">
				and (
					t.TROOPNAME LIKE CONCAT('%', #{search_text}, '%')
				) 
	        </if>
        </if>
        
        #and t.PARENT_TROOPNO = 9689 and t.ORGNO is not null and t.ORGNO != ''
        
        order by cast(t.PARENT_TROOPNO as unsigned), length(t.DISPTROOPNO), cast(t.DISPTROOPNO as unsigned)
		
	</select>
	
	<select id="troopclscode1_search" resultType="pictVO">
		select * from 
		troopclscode
		where USEYN= 'Y'
		and TROOPCLSCODE1 = #{TROOPCLSCODE1}
		and TROOPCLSCODE2 != '00'
		order by ORD
		
	</select>

	<select id="organ_info" resultType="pictVO">
		select 
		ifnull(o.ORGNAME, "") as ORGNMAE,
		(select TROOPNAME from troop t1 where t1.TROOPNO = t.PARENT_TROOPNO limit 1) as PARENTTROOPNAME, 
		sc.SCOUTCLSNAME,
		(select TROOPCLSNAME from troopclscode tc where tc.TROOPCLSCODE1 = t.TROOPCLSCODE1 and tc.TROOPCLSCODE2 = t.TROOPCLSCODE2) as TROOPCLSNAME,
		t.*
	from troop t
	inner join associationcode a on t.ASSOCIATIONCODE = a.ASSOCIATIONCODE
	   left outer join scoutclscode sc on sc.SCOUTCLSCODE = t.SCOUTCLSCODE
	   left outer join org o on o.ORGNO = t.ORGNO
	   where 1=1
	   and t.TROOPNO = #{TROOPNO}
      </select>

	<!-- 신규 조직 등록 -->
	<insert id="new_org" parameterType="pictVO">
		insert into troop (TROOPNO, ASSOCIATIONCODE, PARENT_TROOPNO, TROOPLEVELCODE, TROOPCLSCODE1, TROOPCLSCODE2, SCOUTCLSCODE, DISPTROOPNO, REGDAY, ENGTROOPNAME, TROOPNAME, ORGNO, POSTCODE, ADDR, TELNO, FAXNO, BIGO, ENTERDATE)
		values(
			(select max(TROOPNO + 1) from troop t), #{ASSOCIATIONCODE}, #{PARENTTROOPNO}, #{TROOPLEVELCODE}, #{TROOPCLSCODE1}, #{TROOPCLSCODE2}, #{SCOUTCLSCODE}, #{DISPTROOPNO}, #{REGDAY}, #{ENGTROOPNAME}, #{TROOPNAME}, #{ORGNO}, #{POSTCODE}, #{ADDR}, #{TELNO}, #{FAXNO}, #{BIGO}, now() 
		)
	</insert>
	
	<!-- 조직 수정 저장 -->
	<update id="organ_update" parameterType="pictVO">
		update troop set 
		SCOUTCLSCODE = #{SCOUTCLSCODE},
		DISPTROOPNO = #{DISPTROOPNO},
		REGDAY = #{REGDAY},
		ENGTROOPNAME = #{ENGTROOPNAME},
		TROOPNAME = #{TROOPNAME},
		ORGNO = #{ORGNO},
		POSTCODE = #{POSTCODE},
		ADDR = #{ADDR},
		TELNO = #{TELNO},
		FAXNO = #{FAXNO},
		BIGO = #{BIGO},
		UPDATEDATE = now()
		
		where TROOPNO = #{TROOPNO}
	</update>
	
	<!-- 로그인 한 유저의 비밀번호초기화 상태 확인 -->
	<select id="login_user_info" resultType="string">
		select password_flag from member where MEMBERNO = #{MEMBERNO}
	</select>
	
	<!-- 단위대 통합창 리스트 조회 -->
	<!--
	,(
		select count(m.MEMBERNO) 
        from leader l
        left outer join member m on m.MEMBERNO = l.MEMBERNO
		where 1=1
        and l.ASSOCIATIONCODE = t.ASSOCIATIONCODE and l.TROOPNO = t.TROOPNO
        and l.STARTDAY = '2024-01-01'
	) as '당해지도자'
	,(
		select count(m.MEMBERNO) 
        from scout s 
        left outer join member m on m.MEMBERNO = s.MEMBERNO
		where 1=1
        and s.ASSOCIATIONCODE = t.ASSOCIATIONCODE and s.TROOPNO = t.TROOPNO
        and s.STARTDAY = '2024-01-01'
	) as '당해대원' 
	 -->
	<select id="units_list" resultType="pictVO">
		WITH LeaderCount AS (
		    SELECT 
		        l.ASSOCIATIONCODE, 
		        l.TROOPNO, 
		        SUM(CASE WHEN left(l.STARTDAY, 4) = #{search_year} THEN 1 ELSE 0 END) AS LeaderCount,
		        SUM(CASE WHEN left(l.STARTDAY, 4) = #{pre_year} THEN 1 ELSE 0 END) AS PLeaderCount,
		        SUM(CASE WHEN l.PAYY = 'Y' and left(l.STARTDAY, 4) = #{search_year} THEN 1 ELSE 0 END) AS LeaderPayCount
		    FROM leader l
		    LEFT JOIN member m ON m.MEMBERNO = l.MEMBERNO
		    WHERE 
		    left(l.STARTDAY, 4) IN (#{search_year}, #{pre_year})
		    and l.ASSOCIATIONCODE = #{search_associationcode}
		    GROUP BY l.ASSOCIATIONCODE, l.TROOPNO
		),
		ScoutCount AS (
		    SELECT 
		        s.ASSOCIATIONCODE, 
		        s.TROOPNO, 
		        SUM(CASE WHEN left(s.STARTDAY, 4) = #{search_year} THEN 1 ELSE 0 END) AS ScoutCount,
		        SUM(CASE WHEN left(s.STARTDAY, 4) = #{pre_year} THEN 1 ELSE 0 END) AS PScoutCount,
		        SUM(CASE WHEN s.PAYY = 'Y' and left(s.STARTDAY, 4) = #{search_year} THEN 1 ELSE 0 END) AS ScoutPayCount
		    FROM scout s
		    LEFT JOIN member m ON m.MEMBERNO = s.MEMBERNO
		    WHERE 
		    left(s.STARTDAY, 4) IN (#{search_year}, #{pre_year})
		    and s.ASSOCIATIONCODE = #{search_associationcode}
		    GROUP BY s.ASSOCIATIONCODE, s.TROOPNO
		),
		LeaderGroup AS (
			SELECT 
				l.ASSOCIATIONCODE, 
				l.TROOPNO, 
		        group_concat(l.MEMBERNO) as LeaderGroupNo,
		        group_concat(m.KNAME) as LeaderGroupName
			FROM leader l
			LEFT JOIN member m ON m.MEMBERNO = l.MEMBERNO
			WHERE 
			left(l.STARTDAY, 4) IN (#{search_year})
			and l.ASSOCIATIONCODE = #{ASSOCIATIONCODE}
			GROUP BY l.ASSOCIATIONCODE, l.TROOPNO
		),
		ScoutGroup AS (
			SELECT 
				s.ASSOCIATIONCODE, 
				s.TROOPNO, 
		        group_concat(s.MEMBERNO) as ScoutGroupNo,
		        group_concat(m.KNAME) as ScoutGroupName
			FROM scout s
			LEFT JOIN member m ON m.MEMBERNO = s.MEMBERNO
			WHERE 
			left(s.STARTDAY, 4) IN (#{search_year})
			and s.ASSOCIATIONCODE = #{ASSOCIATIONCODE}
			GROUP BY s.ASSOCIATIONCODE, s.TROOPNO
		)
		select 
			t.TROOPNO,
		    ifnull((select TROOPNAME from troop t1 where t1.TROOPNO = t.PARENT_TROOPNO), '' ) as PARENTTROOPNAME, 
		    t.PARENT_TROOPNO,
		    t.DISPTROOPNO,
			t.TROOPNAME,
			sc.SCOUTCLSNAME,
			(select TROOPCLSNAME from troopclscode tc where tc.TROOPCLSCODE1 = t.TROOPCLSCODE1 and tc.TROOPCLSCODE2 = t.TROOPCLSCODE2) as TROOPCLSNAME,
			'일반' as DETAIL,
			t.LASTREGYEAR
            , COALESCE(lc.PLeaderCount, 0) AS preleader
			, COALESCE(sc2.PScoutCount, 0) AS prescout
			, COALESCE(lc.LeaderCount, 0) AS thisleader
            , COALESCE(sc2.ScoutCount, 0) AS thisscout
            , COALESCE(lc.LeaderPayCount, 0) AS payleader
            , COALESCE(sc2.ScoutPayCount, 0) AS payscout
            , lg.LeaderGroupNo
		    , lg.LeaderGroupName
		    , sg.ScoutGroupNo
		    , sg.ScoutGroupName

		from troop t
		left outer join associationcode a on t.ASSOCIATIONCODE = a.ASSOCIATIONCODE
		left outer join scoutclscode sc on sc.SCOUTCLSCODE = t.SCOUTCLSCODE
        LEFT JOIN LeaderCount lc ON lc.ASSOCIATIONCODE = t.ASSOCIATIONCODE AND lc.TROOPNO = t.TROOPNO
        LEFT JOIN ScoutCount sc2 ON sc2.ASSOCIATIONCODE = t.ASSOCIATIONCODE AND sc2.TROOPNO = t.TROOPNO
        LEFT JOIN LeaderGroup lg ON lg.ASSOCIATIONCODE = t.ASSOCIATIONCODE AND lg.TROOPNO = t.TROOPNO
		LEFT JOIN ScoutGroup sg ON sg.ASSOCIATIONCODE = t.ASSOCIATIONCODE AND sg.TROOPNO = t.TROOPNO
		
		where 1=1
		<if test="search_associationcode != null and search_associationcode != ''">
        	and t.ASSOCIATIONCODE = #{search_associationcode} 
        </if>
        <if test="search_parenttroopno != null and search_parenttroopno != ''">
        	and t.PARENT_TROOPNO = #{search_parenttroopno}
        </if>
        <if test="search_troopcls != null and search_troopcls != ''">
        	and t.TROOPCLSCODE1 = #{search_troopcls}
        </if>
        <if test="search_troopcls2 != null and search_troopcls2 != ''">
        	and t.TROOPCLSCODE2 = #{search_troopcls2}
        </if>
        <if test="search_level != null and search_level != ''">
        	and t.SCOUTCLSCODE = #{search_level}
        </if>

        <if test="search_text2 != null and search_text2 != ''">
	        <if test="search_type2 != null and search_type2 != '' and search_type2 == 'number'">
	        	and t.DISPTROOPNO = #{search_text2}
	        </if>
	        <if test="search_type2 != null and search_type2 != '' and search_type2 == 'name'">
				and (
					t.TROOPNAME LIKE CONCAT('%', #{search_text2}, '%')
				) 
	        </if>
        </if>
        <if test="search_text != null and search_text != ''">
	        <if test="search_type != null and search_type != '' and search_type == 'memberno'">
	        	and (
	        		lg.LeaderGroupNo LIKE CONCAT('%', #{search_text}, '%')
	        		or
	        		sg.ScoutGroupNo LIKE CONCAT('%', #{search_text}, '%')
        		)
	        	
	        </if>
	        <if test="search_type != null and search_type != '' and search_type == 'name'">
				and (
	        		lg.LeaderGroupName LIKE CONCAT('%', #{search_text}, '%')
	        		or
	        		sg.ScoutGroupName LIKE CONCAT('%', #{search_text}, '%')
        		)
	        </if>
        </if>
        
        
        order by cast(t.PARENT_TROOPNO as unsigned), length(t.DISPTROOPNO), cast(t.DISPTROOPNO as unsigned)
		
	</select>
	
	
	<select id="fn_get_units_info" resultType="pictVO">
		WITH LeaderInfo as(
			select group_concat(KNAME, ',', m.MOBILE, ',', m.EMAIL) as LEADERINFOTEXT, TROOPNO
			from member m
			left outer join leader l on l.MEMBERNO = m.MEMBERNO
			where l.TROOPNO = #{TROOPNO} and left(STARTDAY, '4') = #{search_year}
			group by l.LEADERPOSITIONCODE1, KNAME, l.LEADERPOSITIONCODE2, m.MOBILE, m.EMAIL 
			order by l.LEADERPOSITIONCODE1 desc, l.LEADERPOSITIONCODE2 asc
			limit 1 offset 0
		) ,
		LeaderCount AS (
			select
		    TROOPNO, 
			count(idx),
			SUM(CASE WHEN l.CONFIRMY = 'Y' and left(l.STARTDAY, 4) = #{search_year} THEN 1 ELSE 0 END) as leaderconfirm,
		    SUM(CASE WHEN (l.CONFIRMY = 'N' or l.CONFIRMY ='' or l.CONFIRMY is null) and left(l.STARTDAY, 4) = #{search_year} THEN 1 ELSE 0 END) as leadernoconfirm,
		    SUM(l.SCOUTMAGACNT) as leadermagazinecnt,
		    SUM(l.SCOUTMAGAFEE) as leadermagazinefee
			from leader l
			where l.TROOPNO = #{TROOPNO} and left(l.STARTDAY, '4') = #{search_year}
		),
		ScoutCount as (
		select
		    TROOPNO, 
			count(idx),
			SUM(CASE WHEN s.CONFIRMY = 'Y' and left(s.STARTDAY, 4) = #{search_year} THEN 1 ELSE 0 END) as scoutconfirm,
		    SUM(CASE WHEN (s.CONFIRMY = 'N' or s.CONFIRMY ='' or s.CONFIRMY is null) and left(s.STARTDAY, 4) = #{search_year} THEN 1 ELSE 0 END) as scoutnoconfirm,
		    SUM(s.SCOUTMAGACNT) as scoutmagazinecnt,
		    SUM(s.SCOUTMAGAFEE) as scoutmagazinefee
			from scout s
			where s.TROOPNO = #{TROOPNO} and left(s.STARTDAY, '4') = #{search_year}
		)
		
		select 
		t.TROOPNO, t.DISPTROOPNO, t.TROOPNAME, t.TROOPCLSCODE1, tc.TROOPCLSNAME, sc.SCOUTCLSNAME, t.POSTCODE,
		t.ADDR, li.LEADERINFOTEXT as LEADERINFOTEXT,
		COALESCE(lc.leaderconfirm, 0) leaderconfirm, 
		COALESCE(lc.leadernoconfirm, 0) leadernoconfirm, 
		COALESCE(sc2.scoutconfirm, 0) scoutconfirm, 
		COALESCE(sc2.scoutnoconfirm, 0) scoutnoconfirm,
		
		COALESCE(lc.leadermagazinecnt, 0) leadermagazinecnt,
		COALESCE(lc.leadermagazinefee, 0) leadermagazinefee,
		COALESCE(sc2.scoutmagazinecnt, 0) scoutmagazinecnt,
		COALESCE(sc2.scoutmagazinefee, 0) scoutmagazinefee
		
		from troop t
		left outer join troopclscode tc on t.TROOPCLSCODE1 = tc.TROOPCLSCODE1 and t.TROOPCLSCODE2 = tc.TROOPCLSCODE2
		left outer join scoutclscode sc on t.SCOUTCLSCODE = sc.SCOUTCLSCODE
		LEFT JOIN LeaderInfo li ON li.TROOPNO = t.TROOPNO
		LEFT JOIN LeaderCount lc ON lc.TROOPNO = t.TROOPNO 
		LEFT JOIN ScoutCount sc2 ON sc2.TROOPNO = t.TROOPNO
		
		where t.TROOPNO = #{TROOPNO}
	</select>
	
	<select id="fn_get_units_leader" resultType="pictVO">
		select
		l.MEMBERNO, m.KNAME, lp.LEADERPOSITIONNAME, '' as TROOPCODE, l.FEEEXCLUDECODE, l.SCOUTMAGACNT, m.MOBILE, m.EMAIL, 
		(select count(MEMBERNO) from leader sl where sl.MEMBERNO = l.MEMBERNO) as LEADERCNT,
		'' as TRAINING, '' as GIFT, m.LIFEMEMBERY, l.CONFIRMY, l.ADMINY
		from leader l
		left outer join leaderpositioncode lp on l.LEADERPOSITIONCODE1 = lp.LEADERPOSITIONCODE1 and lp.LEADERPOSITIONCODE2 = l.LEADERPOSITIONCODE2
		left join member m on m.MEMBERNO = l.MEMBERNO
		
		where 1=1
		and l.TROOPNO = #{TROOPNO}
		and left(l.STARTDAY, '4') = #{search_year}
	</select>
	
	<select id="fn_get_units_scout" resultType="pictVO">
		select
		s.MEMBERNO, m.KNAME, sc.SCOUTCLSNAME, '' as SCOUTCODE, s.FEEEXCLUDECODE, s.SCOUTMAGACNT, s.SCOUTSCHOOLYEAR, m.MOBILE, m.EMAIL, 
		(select count(MEMBERNO) from scout sl where sl.MEMBERNO = s.MEMBERNO) as SCOUTCNT,
		'' as TRAINING, '' as GIFT, m.LIFEMEMBERY, s.CONFIRMY, '-' as LEVELAPPLY, '' as LEVELINFO
		from scout s
		left outer join scoutclscode sc on s.SCOUTCLSCODE = sc.SCOUTCLSCODE
		left outer join member m on m.MEMBERNO = s.MEMBERNO
		where 1=1
		and s.TROOPNO = #{TROOPNO}
		and left(s.STARTDAY, '4') = #{search_year}
	</select>	
	
	
	<!-- 조직통합창에서 관리 / 연소지도자 -->
	<select id="organ_leader_list" resultType="pictVO">
		select 
		l.MEMBERNO, lp.LEADERPOSITIONNAME, m.KNAME, ifnull(m.HTELNO, '') as HTELNO, '' as OFFICE, ifnull(m.EMAIL, '') as EMAIL, m.MOBILE, l.LEADERPOSITIONCODE1, l.LEADERPOSITIONCODE2
		from leader l 
		left outer join member m on m.MEMBERNO = l.MEMBERNO
		left outer join leaderpositioncode lp on l.LEADERPOSITIONCODE1 = lp.LEADERPOSITIONCODE1 and l.LEADERPOSITIONCODE2 = lp.LEADERPOSITIONCODE2
		where 1=1
		and left(l.STARTDAY, '4') = #{search_year}
		and l.TROOPNO = #{TROOPNO}
		and l.ADMINY = 'Y'
	</select>
	
	<select id="organ_scout_list" resultType="pictVO">
		select 
		s.MEMBERNO, sp.SCOUTPOSITIONCODE, sp.SCOUTPOSITIONNAME, m.KNAME, m.HTELNO, '' as OFFICE, m.EMAIL, m.MOBILE
		from scout s
		left outer join member m on m.MEMBERNO = s.MEMBERNO
		left outer join scoutpositioncode sp on sp.SCOUTPOSITIONCODE = s.SCOUTPOSITIONCODE
		where 1=1
		and left(s.STARTDAY, '4') = #{search_year}
		and s.TROOPNO = #{TROOPNO}
		and s.SCOUTPOSITIONCODE is not null
		and s.SCOUTPOSITIONCODE != ''
	</select>
	
	
	<!-- 대등록에서 단위대조회 -->
	<select id="troop_search" resultType="pictVO">
		select t.TROOPNO, a.ASSOCIATIONNAME, (select TROOPNAME from troop t1 where t1.TROOPNO = t.PARENT_TROOPNO limit 1) as PARENTTROOPNAME, t.DISPTROOPNO, t.TROOPNAME
		from troop t
		left outer join associationcode a on t.ASSOCIATIONCODE = a.ASSOCIATIONCODE
		where 1=1
		<if test="ASSOCIATIONCODE != null and ASSOCIATIONCODE != ''">
			and a.ASSOCIATIONCODE = #{ASSOCIATIONCODE}
		</if>
		<if test="PARENTTROOPNO != null and PARENTTROOPNO != ''">
			and t.PARENT_TROOPNO = #{PARENTTROOPNO}
			</if>
		<if test="TROOPCLSCODE1 != null and TROOPCLSCODE1 != ''">
			and t.TROOPCLSCODE1 = #{TROOPCLSCODE1}
		</if>
		<if test="TROOPCLSCODE2 != null and TROOPCLSCODE2 != ''">
			and t.TROOPCLSCODE2 = #{TROOPCLSCODE2}
		</if>
		<if test="TROOPNAME != null and TROOPNAME != ''">
			and t.TROOPNAME LIKE CONCAT('%', #{TROOPNAME}, '%')
		</if>
		
	</select>
	
	<select id="prev_leader_list" resultType="pictVO">
		select l.idx, l.ADMINY, m.KNAME, m.LIFEMEMBERY, LEADERPOSITIONCODE1, LEADERPOSITIONCODE2, l.SCOUTMAGACNT, m.MEMBERNO, t.TROOPNAME, t.PARENT_TROOPNO as PARENTTROOPNO,
		ifnull(ap.cls99, 0) as cls99, ifnull(ap.cls99new, 0) as cls99new,
		(case when l.LEADERPOSITIONCODE1 = '01' then '협조' when l.LEADERPOSITIONCODE1 = '02' then '훈육' else '전종' end) as LEADERPOSITION,
		(select LEADERPOSITIONNAME from leaderpositioncode lp where lp.LEADERPOSITIONCODE1 = l.LEADERPOSITIONCODE1 and lp.LEADERPOSITIONCODE2 = l.LEADERPOSITIONCODE2) as LEADERPOSITIONNAME
		from leader l
		left outer join member m on l.MEMBERNO = m.MEMBERNO
		left outer join troop t on t.TROOPNO = l.TROOPNO 
		left outer join association_price ap on ap.ASSOCIATIONCODE = l.ASSOCIATIONCODE and ap.YEAR = #{search_year}
		where l.TROOPNO = #{TROOPNO} and left(l.STARTDAY, 4) = #{search_year} and l.CONFIRMY = #{CONFIRMY}
	</select>
	
	<select id="prev_scout_list" resultType="pictVO">
		select s.idx, m.KNAME, m.LIFEMEMBERY, s.SCOUTCLSCODE, s.SCOUTPOSITIONCODE, s.SCOUTMAGACNT, m.MEMBERNO, t.TROOPNAME, t.PARENT_TROOPNO as PARENTTROOPNO,
		ifnull(ap.cls01, 0) as cls01, ifnull(ap.cls02, 0) as cls02, ifnull(ap.cls03, 0) as cls03, ifnull(ap.cls04, 0) as cls04, ifnull(ap.cls05, 0) as cls05, ifnull(ap.cls06, 0) as cls06,  
		ifnull(ap.cls01new, 0) as cls01new, ifnull(ap.cls02new, 0) as cls02new, ifnull(ap.cls03new, 0) as cls03new, ifnull(ap.cls04new, 0) as cls04new, ifnull(ap.cls05new, 0) as cls05new, ifnull(ap.cls06new, 0) as cls06new,
		sp.SCOUTPOSITIONNAME, sc.SCOUTCLSNAME
		from scout s
		left outer join member m on s.MEMBERNO = m.MEMBERNO
		left outer join troop t on t.TROOPNO = s.TROOPNO
		left outer join association_price ap on ap.ASSOCIATIONCODE = s.ASSOCIATIONCODE and ap.YEAR = #{search_year}
		left outer join scoutpositioncode sp on sp.SCOUTPOSITIONCODE = s.SCOUTPOSITIONCODE
		left outer join scoutclscode sc on sc.SCOUTCLSCODE = s.SCOUTCLSCODE
		where s.TROOPNO = #{TROOPNO} and left(STARTDAY, 4) = #{search_year} and CONFIRMY =#{CONFIRMY}
	</select>
	
	<select id="former_list" resultType="pictVO">
		select m.MEMBERNO, m.KNAME, a.ASSOCIATIONNAME, m.association, m.sosock, m.depart, m.ranked, m.BIRTHDAY, m.MOBILE, m.EMAIL, m.EMPLOYEEY, m.PICIMG
		from member m
		left outer join associationcode a on a.ASSOCIATIONCODE = m.association
		where 1=1
		and (m.EMPLOYEEY = 'Y' or m.EMPLOYEEY = 'X')
		
		<if test="MEMBERNO != null and MEMBERNO != ''">
			and m.MEMBERNO = #{MEMBERNO}
		</if>
		
		order by m.EMPLOYEEY desc
	</select>
	
	
	<update id="former_save" parameterType="pictVO">
		update member set
		KNAME= #{KNAME},
		association= #{association}, 
		sosock= #{sosock}, 
		depart= #{depart}, 
		ranked= #{ranked}, 
		BIRTHDAY= #{BIRTHDAY},
		MOBILE= #{MOBILE},
		EMAIL= #{EMAIL},
		EMPLOYEEY = #{EMPLOYEEY}
		where MEMBERNO = #{MEMBERNO}
	</update>
	
	<select id="price_list" resultType="pictVO">
		select p.* , a.ASSOCIATIONNAME
		from association_price p
		left outer join associationcode a on p.ASSOCIATIONCODE = a.ASSOCIATIONCODE
		where p.ASSOCIATIONCODE = #{ASSOCIATIONCODE}
		and p.YEAR = #{search_year}
		
	</select>
	
	
	<update id="price_update" parameterType="pictVO">
		update association_price
		set 
		cls01 = #{cls01},
		cls02 = #{cls02},
		cls03 = #{cls03},
		cls04 = #{cls04},
		cls05 = #{cls05},
		cls06 = #{cls06},
		cls99 = #{cls99},
		cls01new = #{cls01new},
		cls02new = #{cls02new},
		cls03new = #{cls03new},
		cls04new = #{cls04new},
		cls05new = #{cls05new},
		cls06new = #{cls06new},
		cls99new = #{cls99new},
		cls01bigo = #{cls01bigo},
		cls02bigo = #{cls02bigo},
		cls03bigo = #{cls03bigo},
		cls04bigo = #{cls04bigo},
		cls05bigo = #{cls05bigo},
		cls06bigo = #{cls06bigo},
		cls99bigo = #{cls99bigo},
		cls01newbigo = #{cls01newbigo},
		cls02newbigo = #{cls02newbigo},
		cls03newbigo = #{cls03newbigo},
		cls04newbigo = #{cls04newbigo},
		cls05newbigo = #{cls05newbigo},
		cls06newbigo = #{cls06newbigo},
		cls99newbigo = #{cls99newbigo}
		where ASSOCIATIONCODE = #{ASSOCIATIONCODE} and YEAR = #{search_year}
	</update>
	
	<insert id="price_insert" parameterType="pictVO">
		INSERT INTO association_price(ASSOCIATIONCODE, YEAR, cls01,cls02,cls03,cls04,cls05,cls06,cls99,cls01new,cls02new,cls03new,cls04new,cls05new,cls06new,cls99new,cls01bigo,cls02bigo,cls03bigo,cls04bigo,cls05bigo,cls06bigo,cls99bigo,cls01newbigo,cls02newbigo,cls03newbigo,cls04newbigo,cls05newbigo,cls06newbigo,cls99newbigo) 
		VALUES (#{ASSOCIATIONCODE}, #{search_year}, #{cls01},#{cls02},#{cls03},#{cls04},#{cls05},#{cls06},#{cls99},#{cls01new},#{cls02new},#{cls03new},#{cls04new},#{cls05new},#{cls06new},#{cls99new},#{cls01bigo},#{cls02bigo},#{cls03bigo},#{cls04bigo},#{cls05bigo},#{cls06bigo},#{cls99bigo},#{cls01newbigo},#{cls02newbigo},#{cls03newbigo},#{cls04newbigo},#{cls05newbigo},#{cls06newbigo},#{cls99newbigo} );
	</insert>
	
	<select id="association_price" resultType="pictVO">
		select * from association_price where ASSOCIATIONCODE = #{ASSOCIATIONCODE} and YEAR = #{search_year}
	</select>
	
	<insert id="leader_whole_register" parameterType="pictVO">
		INSERT INTO leader(MEMBERNO, TROOPNO, STARTDAY, ENDDAY, ASSOCIATIONCODE, PARENT_TROOPNO, PAYY, CONFIRMY, SCOUTMAGACNT, SCOUTMAGAFEE, ENTRYFEE, LEADERPOSITIONCODE1, LEADERPOSITIONCODE2, ADMINY, ENTERDATE, ENTERPGM) 
		VALUES (#{MEMBERNO},#{TROOPNO},#{STARTDAY},#{ENDDAY},#{ASSOCIATIONCODE},#{PARENTTROOPNO},#{PAYY},#{CONFIRMY},#{SCOUTMAGACNT},#{SCOUTMAGAFEE},#{ENTRYFEE},#{LEADERPOSITIONCODE1},#{LEADERPOSITIONCODE2},#{ADMINY},now(), "일괄등록")
	</insert>
	
	<insert id="scout_whole_register" parameterType="pictVO">
		INSERT INTO scout(MEMBERNO, TROOPNO, STARTDAY, ENDDAY, ASSOCIATIONCODE, PARENT_TROOPNO, PAYY, CONFIRMY, SCOUTMAGACNT, SCOUTMAGAFEE, ENTRYFEE, SCOUTCLSCODE, SCOUTPOSITIONCODE, ENTERDATE, ENTERPGM) 
		VALUES (#{MEMBERNO},#{TROOPNO},#{STARTDAY},#{ENDDAY},#{ASSOCIATIONCODE},#{PARENTTROOPNO},#{PAYY},#{CONFIRMY},#{SCOUTMAGACNT},#{SCOUTMAGAFEE},#{ENTRYFEE},#{SCOUTCLSCODE},#{SCOUTPOSITIONCODE},now(), "일괄등록")
	</insert>
	
	<update id="leader_whole_confirm" parameterType="pictVO">
		update leader
			set 
			CONFIRMY = 'Y',
			PAYY = "Y",
			UPDATEPGM = "일괄승인",
			UPDATEDATE = now()
		where idx = #{idx}
		
	</update>
	
	<update id="scout_whole_confirm" parameterType="pictVO">
		update scout
			set 
			CONFIRMY = 'Y',
			PAYY = "Y",
			UPDATEPGM = "일괄승인",
			UPDATEDATE = now()
		where idx = #{idx}
	</update>
	
	<!-- @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@홈페이지 시작@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ -->
	<select id="board_list" resultType="pictVO">
		select * from board_table 
		where 1=1
		<if test="BRDNO != null and BRDNO != ''">
			and BRDNO = #{BRDNO}
		</if>
		and USEAT = 'Y'

		order by NOTI desc, ENTERDATE desc
		LIMIT #{limit} OFFSET #{startNumber}
	</select>
	
	<select id="board_list_cnt" resultType="int">
		select count(*) from board_table 
			where 1=1
			<if test="BRDNO != null and BRDNO != ''">
				and BRDNO = #{BRDNO}
			</if>
			and USEAT = 'Y'
	
			order by NOTI desc, ENTERDATE desc
	</select>
	
	<select id="board_list_one" resultType="pictVO">
		select * from board_table 
		where BRDCTSNO = #{BRDCTSNO}
	</select>
	
	<update id="board_view_cnt" parameterType="pictVO">
		update board_table
		set 
		VIEWCNT =  cast(VIEWCNT as unsigned) + 1
		where BRDCTSNO = #{BRDCTSNO}
	</update>
	
	<update id="board_delete" parameterType="pictVO">
		update board_table
		set 
		USEAT = "N"
		where BRDCTSNO = #{BRDCTSNO}
	</update>
	
	<update id="board_update" parameterType="pictVO">
		update board_table
		set 
		BRDNO = #{BRDNO}, 
		SUBJECT=#{SUBJECT}, 
		CONTENTS=#{CONTENTS}, 
		<if test="file1 != null and file1 != ''">
			file1=#{file1},
		</if>
		<if test="file2 != null and file2 != ''">
			file2=#{file2},
		</if>
		<if test="file3 != null and file3 != ''">
			file3=#{file3},
		</if>
		<if test="file4 != null and file4 != ''">
			file4=#{file4},
		</if>
		<if test="file5 != null and file5 != ''">
			file5=#{file5},
		</if>
		NOTI =#{NOTI},
		register = #{register}
		where BRDCTSNO = #{BRDCTSNO}
	</update>
	
	<insert id="board_insert" parameterType="pictVO">
		INSERT INTO board_table(BRDNO, SUBJECT, CONTENTS, file1, file2, file3, file4, file5, ENTERDATE, USEAT, NOTI, register) 
		VALUES (#{BRDNO}, #{SUBJECT},#{CONTENTS},#{file1},#{file2},#{file3},#{file4},#{file5},now(),'Y',#{NOTI},#{register})
	</insert>
	
</mapper>
