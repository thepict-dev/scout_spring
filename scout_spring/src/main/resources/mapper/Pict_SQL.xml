<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="pict.mapper.PictMapper">	

	
	<select id="test_service" resultType="pictVO">
		select * from user_info
	</select>
	
	
	<!-- 공지사항 -->
	<select id="board_list" resultType="pictVO">
		select idx, title, text, file1, file2, date_format(regdate, '%Y-%m-%d') as regdate
		from board_table
		<if test="search_text != null and search_text != '' ">
			where (
				title LIKE CONCAT('%', #{search_text}, '%')
			) 
		</if>
	</select>
	
	<select id="board_list_one" resultType="pictVO">
		select
		idx, title, text, file1, file2, date_format(regdate, '%Y-%m-%d') as regdate 
		from board_table
		where idx = #{idx}
	</select>
	
	<insert id="board_insert" parameterType="pictVO">
		INSERT INTO board_table
			(
			 title,  text, regdate, file1, file2
			)
		VALUES (
			 #{title}, #{text}, now(), #{file1}, #{file2}
			  ) 
	</insert>
	
	<update id="board_update" parameterType="pictVO">
		update board_table
		set title =#{title}, text = #{text}, regdate = now()
		<if test="file1 != null and file1 != '' ">
			, file1 = #{file1}
		</if>
		<if test="file2 != null and file2 != '' ">
			, file2 = #{file2}
		</if>
		where idx = #{idx}
	</update>
	
	<delete id="board_delete" parameterType="pictVO">
		delete from board_table where idx = #{idx}
	</delete>
	
	<!-- 보도자료 -->
	<select id="news_list" resultType="pict.service.PictVO">
		select idx, title, newstitle, linkurl, date_format(regdate, '%Y-%m-%d') as regdate
		from news_table
		<if test="search_text != null and search_text != '' ">
			where (
				title LIKE CONCAT('%', #{search_text}, '%')
			) 
		</if>
	</select>
	
	<select id="news_list_one" resultType="pictVO">
		select idx, title, newstitle, linkurl, date_format(regdate, '%Y-%m-%d') as regdate 
		from news_table
		where idx = #{idx}
	</select>
	
	<insert id="news_insert" parameterType="pict.service.PictVO">
	INSERT INTO news_table
		(
		title, newstitle, regdate, linkurl
		)
	VALUES (
		#{title}, #{newstitle}, now(), #{linkurl}
		) 
	</insert>
	
	<update id="news_update" parameterType="pictVO">
		update news_table
		set title =#{title}, newstitle = #{newstitle}, regdate = now(), linkurl = #{linkurl}

		where idx = #{idx}
	</update>
	
	<delete id="news_delete" parameterType="pictVO">
		delete from news_table where idx = #{idx}
	</delete>
	
	<!-- 참가영상 -->
	<select id="video_list" resultType="pict.service.PictVO">
	
		select *
		from video_table
		where 1=1
		<if test="search_text != null and search_text != '' ">
			and (
				title LIKE CONCAT('%', #{search_text}, '%')
			) 
		</if>
		<if test="type != null and type != '' ">
			order by rand()
		</if>
	</select>
	
	<select id="video_list_one" resultType="pictVO">
		select * from video_table
		where idx = #{idx}
	</select>
	
	<insert id="video_insert" parameterType="pict.service.PictVO">
	INSERT INTO video_table
		(
		category, title, team, imgurl, videourl, regdate
		)
	VALUES (
		#{category}, #{title}, #{team}, #{imgurl}, #{videourl}, now()
		) 
	</insert>
	
	<update id="video_update" parameterType="pictVO">
		update video_table
		set category =#{category}, title = #{title}, team = #{team}, regdate = now()
		<if test="imgurl != null and imgurl != '' ">
			, imgurl = #{imgurl}
		</if>
		<if test="videourl != null and videourl != '' ">
			, videourl = #{videourl}
		</if>

		where idx = #{idx}
	</update>
	
	<delete id="video_delete" parameterType="pictVO">
		delete from video_table where idx = #{idx}
	</delete>

	<select id="scout_left_search_list" resultType="pictVO">
		select m.MEMBERNO, m.KNAME, m.BIRTHDAY, m.MEMCLSCODE, m.MEMGRADECODE, m.TROOPSCOUTY, m.TROOPLEADERY, 
		(case when li.idx is not null then 'Y' else 'N' end) as LIFE_YN,
		(case when (select group_concat(LEADERPOSITIONCODE1) from leader le where le.MEMBERNO = m.MEMBERNO) like '%03%' then 'Y' else 'N' end) as LEADER
		from member m
		inner join memclscode mc on m.MEMCLSCODE = mc.MEMCLSCODE
		left outer join lifetime li on li.MEMBERNO = m.MEMBERNO
		where 1=1
		<if test="search_kname != null and search_kname != '' ">
			and KNAME LIKE CONCAT('%', #{search_kname}, '%')
		</if>
		<if test="search_memberno != null and search_memberno != '' ">
			and m.MEMBERNO =#{search_memberno}
		</if>
		<if test="search_memberno_se != null and search_memberno_se != '' ">
			and m.MEMBERNO =#{search_memberno_se}
		</if>
		
		<if test="search_birthday != null and search_birthday != '' ">
			and m.BIRTHDAY = #{search_birthday}
		</if>
		
		<if test="search_history != null and search_history != ''">
			<choose>
	            <when test="search_history == 3"> 
	                and li.idx is not null 
	            </when>
	            <when test="search_history == 2">
	            	and m.TROOPLEADERY = 'Y'
	            </when>
	            <otherwise> 
	                and m.TROOPSCOUTY = 'Y'
	            </otherwise>
	        </choose>
		</if>
		
		<if test="search_memclscode != null and search_memclscode != ''">
			and m.MEMCLSCODE = #{search_memclscode}
		</if>
		
		<if test="search_memgradecode != null and search_memgradecode != ''">
			and m.MEMGRADECODE = #{search_memgradecode}
		</if>
		
		<if test="search_start != null and search_start != '' and search_end != null and search_end != '' ">
			and m.ENTERDATE between #{search_start} and #{search_end}
		</if>
		
	</select>

	<!-- 대원/리더 기본정보 조회 -->
	<select id="get_per_info" resultType="pictVO">
		select m.MEMBERNO, m.MEMCLSCODE, m.MEMGRADECODE, m.PICIMG,
		 m.BIRTHDAY, (case when (select group_concat(LEADERPOSITIONCODE1) from leader le where le.MEMBERNO = m.MEMBERNO) like '%03%' then 'Y' else 'N' end) as LEADER, 
		 m.KNAME, m.ENAME, m.SEX,
		 m.MOBILE, m.EMAIL,
		 m.HPOSTCODE, m.HADDR, m.EMAILYN, m.SMSYN, m.JOBCODE
		from member m
		inner join memclscode mc on m.MEMCLSCODE = mc.MEMCLSCODE
		where m.MEMBERNO = #{MEMBERNO} and m.KNAME = #{KNAME};
	</select>

	<select id="job_list" resultType="pictVO">
		select * from jobcode where USEYN = 'Y'
		order by ORD asc
	</select>

	<!-- 지도자연공 -->
	<select id="leader_list" resultType="pictVO">
		select ifnull(l.ADMINY, '') as ADMINY, substring(l.STARTDAY, 1,4) as YEAR, a.ASSOCIATIONNAME, t.TROOPNAME, t.TROOPNO,
		(select TROOPNAME from troop t2 where t2.TROOPNO = l.PARENT_TROOPNO) as UNITY,
		(case when l.LEADERPOSITIONCODE1 = '01' then '협조' when l.LEADERPOSITIONCODE1 = '02' then '훈육' else '전종' end) as LEADERPOSITION,
		(select LEADERPOSITIONNAME from leaderpositioncode lp where lp.LEADERPOSITIONCODE1 = l.LEADERPOSITIONCODE1 and lp.LEADERPOSITIONCODE2 = l.LEADERPOSITIONCODE2) as LEADERPOSITIONNAME,
		ifnull(o.ORGNAME, '') as ORGNAME
		from leader l
		inner join associationcode a on l.ASSOCIATIONCODE = a.ASSOCIATIONCODE
		inner join troop t on t.TROOPNO = l.TROOPNO
		left outer join org o on o.ORGNO = l.LEADERORGNO
		
		where l.MEMBERNO = #{MEMBERNO}
		order by year desc, ADMINY desc
	</select>
	
	<!-- 대원연공 -->
	<select id="scout_list" resultType="pictVO">
		select substring(s.STARTDAY, 1,4) as YEAR, a.ASSOCIATIONNAME, 
		(select TROOPNAME from troop t2 where t2.TROOPNO = s.PARENT_TROOPNO) as UNITY, t.TROOPNAME, t.TROOPNO, s.SCOUTSCHOOLYEAR,
		ifnull(o.ORGNAME, '') as ORGNAME, (select ORGCLSNAME from orgclscode oc where oc.ORGCLSCODE1 = o.ORGCLSCODE1 and oc.ORGCLSCODE2 = o.ORGCLSCODE2) as ORGCLSNAME
		from scout s
		inner join associationcode a on s.ASSOCIATIONCODE = a.ASSOCIATIONCODE
		inner join troop t on t.TROOPNO = s.TROOPNO
		left outer join org o on o.ORGNO = s.SCOUTORGNO
		where s.MEMBERNO = #{MEMBERNO}
		order by year desc
	</select>

	<!-- 연맹에서 리스트 -->
	<select id="association_list" resultType="pictVO">
		select a.*
		from associationcode a
		where a.USE_AT = 'Y'
		group by a.idx
		order by  cast(PRINTORDER as unsigned) 
	</select>
	
	<!-- 지구연합회 리스트 -->
	<select id="unity_list" resultType="pictVO">
		select *, PARENT_TROOPNO as PARENTTROOPNO from troop 
		where ASSOCIATIONCODE = #{ASSOCIATIONCODE} 
		and PARENT_TROOPNO = (select TROOPNO from troop where ASSOCIATIONCODE = #{ASSOCIATIONCODE} and DISPTROOPNO like '%ASS%' limit 1 offset 0)
		order by TROOPNO asc
	</select>
	
	<!-- 단위대 리스트 -->
	<select id="troop_list" resultType="pictVO">
		 
		select t1.*, sc.SCOUTCLSNAME, tc.TROOPCLSNAME,
		(select TROOPNAME from troop t2 where t2.TROOPNO = t1.PARENT_TROOPNO) as UNITY
		from troop t1 
		left outer join scoutclscode sc on t1.SCOUTCLSCODE = sc.SCOUTCLSCODE
		left outer join troopclscode tc on t1.TROOPCLSCODE1 = tc.TROOPCLSCODE1 and t1.TROOPCLSCODE2 = tc.TROOPCLSCODE2
		where 1=1
		
		<if test="ASSOCIATIONCODE != null and ASSOCIATIONCODE != ''">
        	and t1.ASSOCIATIONCODE = #{ASSOCIATIONCODE} #연맹
        </if>
        <if test="PARENTTROOPNO != null and PARENTTROOPNO != ''">
        	and t1.PARENT_TROOPNO = #{PARENTTROOPNO}	#지구
        </if>
        <if test="TROOPLEVELCODE != null and TROOPLEVELCODE != ''">
        	and t1.TROOPLEVELCODE = #{TROOPLEVELCODE}	#단위대
        </if>
        <if test="TROOPCLSCODE != null and TROOPCLSCODE != ''">
        	and t1.TROOPCLSCODE1 = #{TROOPCLSCODE}
        </if>
		order by length(t1.DISPTROOPNO), cast(t1.DISPTROOPNO as unsigned)
	</select>
	
	<!-- 등급리스트 -->
	<select id="trooplevel_list" resultType="pictVO">
		select * from trooplevelcode
	</select>
	
	<!-- 스카우트구분리스트 -->
	<select id="scoutcls_list" resultType="pictVO">
		select * from scoutclscode order by ORD;
	</select>
	
	<!-- 단위대정보 -->
	<select id="troop_info" resultType="pictVO">
		select * from troop where TROOPNO = #{TROOPNO}
	</select>


	
	
	<!-- 그뭐야 제일 위에[꺼 -->
	<select id="troop_left_search_list" resultType="pictVO">
		select t.*
		from troop t
		inner join associationcode a on t.ASSOCIATIONCODE = a.ASSOCIATIONCODE
		left outer join org o on o.ORGNO = t.ORGNO
		where 1=1
		and a.ASSOCIATIONCODE = '120'
		#and t.TROOPCLSCODE1 = '02'
		and t.PARENT_TROOPNO = '9701'
	</select>


</mapper>
